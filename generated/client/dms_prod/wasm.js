
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AddressesScalarFieldEnum = {
  id: 'id',
  address_1: 'address_1',
  address_2: 'address_2',
  address_3: 'address_3',
  city: 'city',
  state_county: 'state_county',
  country_id: 'country_id',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  postal_code: 'postal_code',
  address_type: 'address_type',
  entity_id: 'entity_id',
  entity_type: 'entity_type',
  is_delete: 'is_delete',
  deleted_at: 'deleted_at'
};

exports.Prisma.Deal_fieldsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  leads_notes_id: 'leads_notes_id',
  deals_field_name: 'deals_field_name',
  deals_field_type: 'deals_field_type',
  deals_field_description: 'deals_field_description',
  deals_field_rpa_group: 'deals_field_rpa_group',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Deal_fields_valuesScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  deal_field_id: 'deal_field_id',
  deal_field_value: 'deal_field_value',
  pdf_path: 'pdf_path',
  is_issued: 'is_issued',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_algorithm: 'is_algorithm',
  is_old: 'is_old'
};

exports.Prisma.Deal_sumScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  is_debtor: 'is_debtor',
  is_creditor: 'is_creditor',
  is_asset: 'is_asset',
  debtor_currency_id: 'debtor_currency_id',
  creditor_currency_id: 'creditor_currency_id',
  asset_currency_id: 'asset_currency_id',
  debtor_amount: 'debtor_amount',
  creditor_amount: 'creditor_amount',
  asset_amount: 'asset_amount',
  variable_id: 'variable_id',
  record_type_id: 'record_type_id',
  probability: 'probability',
  monthly_amount: 'monthly_amount',
  purchase_percent: 'purchase_percent',
  sell_rate_percent: 'sell_rate_percent',
  arrangement_amount: 'arrangement_amount',
  arrangement_rate_percent: 'arrangement_rate_percent',
  repayment_currency_id: 'repayment_currency_id',
  repayment_amount: 'repayment_amount',
  is_commitment: 'is_commitment',
  commitment_amount: 'commitment_amount',
  commitment_rate_percent: 'commitment_rate_percent',
  usage_id: 'usage_id',
  usage_rate_percent: 'usage_rate_percent',
  repaid_from_id: 'repaid_from_id',
  over: 'over',
  non_traded_service_id: 'non_traded_service_id',
  non_traded_service_amount: 'non_traded_service_amount',
  is_months: 'is_months',
  is_days: 'is_days',
  specific_condition_id: 'specific_condition_id',
  is_documented: 'is_documented',
  note: 'note',
  turnover_currency_id: 'turnover_currency_id',
  turnover_amount: 'turnover_amount',
  grade: 'grade',
  gross_margin_percent: 'gross_margin_percent',
  net_margin_percent: 'net_margin_percent',
  class: 'class',
  bank_id: 'bank_id',
  is_debenture: 'is_debenture',
  lone_type_id: 'lone_type_id',
  is_property: 'is_property',
  loan_amount_currency_id: 'loan_amount_currency_id',
  loan_amount: 'loan_amount',
  is_buy_out: 'is_buy_out',
  account_system_id: 'account_system_id',
  is_invoicing: 'is_invoicing',
  pricing_method_id: 'pricing_method_id',
  last_increase_date: 'last_increase_date',
  file_attachment: 'file_attachment',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  specific_condition_text: 'specific_condition_text',
  pricing_method_text: 'pricing_method_text',
  steps_no: 'steps_no',
  deadline_date: 'deadline_date',
  a_etr_sell_rate: 'a_etr_sell_rate',
  b_etr_sell_rate: 'b_etr_sell_rate',
  d_etr_sell_rate: 'd_etr_sell_rate',
  future_d_etr_sell_rate: 'future_d_etr_sell_rate',
  dso: 'dso'
};

exports.Prisma.Dm_browser_tokenScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Dm_filtersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  page: 'page',
  filter: 'filter',
  value: 'value',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  global_toggle: 'global_toggle',
  created_by: 'created_by',
  updated_by: 'updated_by',
  column_state: 'column_state'
};

exports.Prisma.Dm_push_notificationScalarFieldEnum = {
  id: 'id',
  from_id: 'from_id',
  to_id: 'to_id',
  title: 'title',
  content: 'content',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  type: 'type',
  reference_id: 'reference_id',
  link: 'link',
  multicast_id: 'multicast_id'
};

exports.Prisma.Dm_tte_algorithmsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  algorithm_name: 'algorithm_name',
  algo_func_name: 'algo_func_name',
  readable_format: 'readable_format',
  algorithm_function: 'algorithm_function',
  algorithm_json: 'algorithm_json',
  used_tte_fields: 'used_tte_fields',
  used_algorithms: 'used_algorithms',
  algorithm_desc: 'algorithm_desc',
  last_parse_result: 'last_parse_result',
  status: 'status',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Dm_tte_fieldsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  field_name: 'field_name',
  field_type: 'field_type',
  default_value: 'default_value',
  status: 'status',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  description: 'description',
  algorithm_id: 'algorithm_id',
  rpa_group: 'rpa_group',
  rpa_values: 'rpa_values'
};

exports.Prisma.Dma_menuScalarFieldEnum = {
  id: 'id',
  title: 'title',
  path: 'path',
  parent_id: 'parent_id',
  sequence_no: 'sequence_no',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Dma_menu_actionsScalarFieldEnum = {
  id: 'id',
  action_name: 'action_name',
  dma_menu_id: 'dma_menu_id',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  display_name: 'display_name'
};

exports.Prisma.Dma_reportsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  user_id: 'user_id',
  name: 'name',
  code: 'code',
  base_currency_id: 'base_currency_id',
  description: 'description',
  type: 'type',
  generated_on: 'generated_on',
  generated_on_options: 'generated_on_options',
  generated_on_query: 'generated_on_query',
  generated_on_dynamic_values: 'generated_on_dynamic_values',
  is_favorite: 'is_favorite',
  status: 'status',
  last_generated_by: 'last_generated_by',
  last_generated_at: 'last_generated_at',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  global_toggle: 'global_toggle',
  column_settings: 'column_settings',
  report_on: 'report_on',
  report_by: 'report_by',
  report_for: 'report_for',
  grid_columns: 'grid_columns'
};

exports.Prisma.Email_historyScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  from_entity_type: 'from_entity_type',
  from_entity_id: 'from_entity_id',
  to_entity_type: 'to_entity_type',
  to_entity_id: 'to_entity_id',
  organisation_id: 'organisation_id',
  people_id: 'people_id',
  is_sent: 'is_sent',
  sent_date: 'sent_date',
  mail_content: 'mail_content',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Failed_jobsScalarFieldEnum = {
  id: 'id',
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception',
  failed_at: 'failed_at'
};

exports.Prisma.Favourite_reportScalarFieldEnum = {
  id: 'id',
  type: 'type',
  report_id: 'report_id',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Global_countriesScalarFieldEnum = {
  id: 'id',
  country_name: 'country_name',
  iso_code_alpha2: 'iso_code_alpha2',
  iso_code_alpha3: 'iso_code_alpha3',
  dial_code: 'dial_code',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  time_zone: 'time_zone'
};

exports.Prisma.Global_currenciesScalarFieldEnum = {
  id: 'id',
  currency_name: 'currency_name',
  currency_code: 'currency_code',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  currency_symbol: 'currency_symbol'
};

exports.Prisma.Global_entity_contactsScalarFieldEnum = {
  id: 'id',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  contact_type: 'contact_type',
  contact_for: 'contact_for',
  contact_value: 'contact_value',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_delete: 'is_delete',
  deleted_at: 'deleted_at'
};

exports.Prisma.Global_industriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  updated_by: 'updated_by'
};

exports.Prisma.Global_nace_sectionsScalarFieldEnum = {
  id: 'id',
  code: 'code',
  section: 'section',
  created_at: 'created_at',
  updated_at: 'updated_at',
  parent_id: 'parent_id'
};

exports.Prisma.Global_nace_sections_categoryScalarFieldEnum = {
  id: 'id',
  category_name: 'category_name',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Global_organisationsScalarFieldEnum = {
  id: 'id',
  parent_organisation_id: 'parent_organisation_id',
  organisation_name: 'organisation_name',
  trade_name: 'trade_name',
  fy_start_month: 'fy_start_month',
  fy_end_month: 'fy_end_month',
  website: 'website',
  registration_number: 'registration_number',
  vat_number: 'vat_number',
  crm_id: 'crm_id',
  status_id: 'status_id',
  registered_country_id: 'registered_country_id',
  creator_ledger_id: 'creator_ledger_id',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  logo_url: 'logo_url',
  industry_id: 'industry_id',
  currency_id: 'currency_id',
  description: 'description',
  nace_section_id: 'nace_section_id',
  revenue_access_number: 'revenue_access_number',
  exchange_ref_id: 'exchange_ref_id',
  hierarchy_code: 'hierarchy_code',
  deleted_at: 'deleted_at',
  is_delete: 'is_delete',
  leads_transactions_id: 'leads_transactions_id',
  allow_external_app: 'allow_external_app',
  proof_of_identity: 'proof_of_identity',
  proof_of_address: 'proof_of_address',
  to_be_deleted: 'to_be_deleted',
  merge_with: 'merge_with'
};

exports.Prisma.Global_peopleScalarFieldEnum = {
  id: 'id',
  creator_ledger_id: 'creator_ledger_id',
  salutation: 'salutation',
  first_name: 'first_name',
  last_name: 'last_name',
  title: 'title',
  date_of_birth: 'date_of_birth',
  pps_number: 'pps_number',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  former_last_name: 'former_last_name',
  notes: 'notes',
  ppsn_document_type: 'ppsn_document_type',
  photo_url: 'photo_url',
  pronounced: 'pronounced',
  signature_attachment: 'signature_attachment',
  crm_id: 'crm_id',
  exchange_ref_id: 'exchange_ref_id',
  industry_id: 'industry_id',
  deleted_at: 'deleted_at',
  is_delete: 'is_delete',
  import_people_name: 'import_people_name',
  leads_transactions_id: 'leads_transactions_id',
  proof_of_identity: 'proof_of_identity',
  proof_of_address: 'proof_of_address',
  status_id: 'status_id'
};

exports.Prisma.Global_timezonesScalarFieldEnum = {
  id: 'id',
  timezone: 'timezone',
  gmt_offset: 'gmt_offset',
  is_dst: 'is_dst',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Investment_hoursScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  users_id: 'users_id',
  leads_transactions_id: 'leads_transactions_id',
  investment_hours: 'investment_hours',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  page_name: 'page_name'
};

exports.Prisma.Key_libraryScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  key_subject: 'key_subject',
  key_note: 'key_note',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lead_transcation_id: 'lead_transcation_id'
};

exports.Prisma.Knowledge_libraryScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  updated_by: 'updated_by',
  updated_at: 'updated_at',
  industry_id: 'industry_id',
  leads_notes_id: 'leads_notes_id',
  knowledge_subject: 'knowledge_subject',
  notes_description: 'notes_description',
  notes_date: 'notes_date',
  knowledge_group: 'knowledge_group',
  deleted_at: 'deleted_at',
  knowledge_classification: 'knowledge_classification'
};

exports.Prisma.Lead_record_typeScalarFieldEnum = {
  id: 'id',
  record_type_name: 'record_type_name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  sequence: 'sequence'
};

exports.Prisma.Leads_connectionsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  ledgers_role_mapping_id: 'ledgers_role_mapping_id',
  sequence_no: 'sequence_no',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  role_id: 'role_id',
  entity_id: 'entity_id',
  entity_type: 'entity_type',
  connection_role_name: 'connection_role_name',
  is_delete: 'is_delete',
  deleted_at: 'deleted_at'
};

exports.Prisma.Leads_entity_attributesScalarFieldEnum = {
  id: 'id',
  leads_entity_attributes_type: 'leads_entity_attributes_type',
  leads_entity_attributes_name: 'leads_entity_attributes_name',
  is_display: 'is_display',
  created_by: 'created_by',
  created_at: 'created_at'
};

exports.Prisma.Leads_entity_attributes_valueScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  leads_entity_attributes_id: 'leads_entity_attributes_id',
  leads_entity_attributes_value: 'leads_entity_attributes_value',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  leads_entity_id: 'leads_entity_id',
  deleted_at: 'deleted_at'
};

exports.Prisma.Leads_folders_filesScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  parent_folder_id: 'parent_folder_id',
  attachment_type: 'attachment_type',
  attachment_id: 'attachment_id',
  sequence_no: 'sequence_no',
  entity_type: 'entity_type',
  entity_name: 'entity_name',
  full_path: 'full_path',
  is_key_document: 'is_key_document',
  is_deleted: 'is_deleted',
  deleted_date: 'deleted_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  extra_1: 'extra_1',
  missing_entry: 'missing_entry',
  leads_notes_id: 'leads_notes_id',
  deleted_at: 'deleted_at',
  is_issued: 'is_issued',
  pdf_path: 'pdf_path',
  full_path_back_up: 'full_path_back_up',
  created_by_id: 'created_by_id',
  a_id: 'a_id',
  feed_item_id: 'feed_item_id',
  related_record_id: 'related_record_id',
  file_ext: 'file_ext'
};

exports.Prisma.Leads_notesScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  notes_flag: 'notes_flag',
  notes_description: 'notes_description',
  notes_date: 'notes_date',
  is_tagged: 'is_tagged',
  is_locked: 'is_locked',
  is_knowledge: 'is_knowledge',
  is_deleted: 'is_deleted',
  deleted_date: 'deleted_date',
  current_bg_color: 'current_bg_color',
  previous_bg_color: 'previous_bg_color',
  file_attachment: 'file_attachment',
  is_autosaved: 'is_autosaved',
  autosaved_date: 'autosaved_date',
  is_saved: 'is_saved',
  saved_date: 'saved_date',
  is_sent: 'is_sent',
  sent_date: 'sent_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  organisation_id: 'organisation_id',
  user_id: 'user_id',
  sent_by: 'sent_by',
  opportunity_name: 'opportunity_name',
  link_url: 'link_url',
  a_id: 'a_id',
  feed_item_id: 'feed_item_id',
  parent_id: 'parent_id',
  content_id: 'content_id',
  related_record_id: 'related_record_id',
  inserted_by_id: 'inserted_by_id',
  origin_network_id: 'origin_network_id',
  ticket_id: 'ticket_id',
  attachment: 'attachment',
  sequence: 'sequence',
  word_count: 'word_count',
  draft_note: 'draft_note'
};

exports.Prisma.Leads_scheduleScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  schedule_title: 'schedule_title',
  schedule_description: 'schedule_description',
  schedule_date: 'schedule_date',
  is_confirm: 'is_confirm',
  confirmed_date: 'confirmed_date',
  is_start_date: 'is_start_date',
  start_date: 'start_date',
  is_tagged: 'is_tagged',
  is_locked: 'is_locked',
  is_knowledge: 'is_knowledge',
  file_attachment: 'file_attachment',
  is_saved: 'is_saved',
  saved_date: 'saved_date',
  is_sent: 'is_sent',
  sent_date: 'sent_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Leads_screensScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  screen_title: 'screen_title',
  screen_description: 'screen_description',
  screen_date: 'screen_date',
  is_confirm: 'is_confirm',
  confirmed_date: 'confirmed_date',
  is_tagged: 'is_tagged',
  is_locked: 'is_locked',
  is_knowledge: 'is_knowledge',
  file_attachment: 'file_attachment',
  is_saved: 'is_saved',
  saved_date: 'saved_date',
  is_sent: 'is_sent',
  sent_date: 'sent_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Leads_sssScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  type: 'type',
  title: 'title',
  description: 'description',
  date: 'date',
  is_library: 'is_library',
  autosave: 'autosave',
  auto_save_date: 'auto_save_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_start_date: 'is_start_date',
  is_template: 'is_template',
  deleted_at: 'deleted_at',
  description_text: 'description_text',
  description_backup: 'description_backup',
  draft_description: 'draft_description',
  classification_id: 'classification_id',
  shortfall_type: 'shortfall_type'
};

exports.Prisma.Leads_statusScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  parent_status_id: 'parent_status_id',
  status_name: 'status_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  sequence_no: 'sequence_no',
  record_type: 'record_type'
};

exports.Prisma.Leads_status_tempScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  parent_status_id: 'parent_status_id',
  status_name: 'status_name',
  sequence_no: 'sequence_no',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Leads_tagsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  leads_notes_id: 'leads_notes_id',
  tag_subject: 'tag_subject',
  tag_content: 'tag_content',
  tag_date: 'tag_date',
  sequence_no: 'sequence_no',
  is_deleted: 'is_deleted',
  deleted_date: 'deleted_date',
  deleted_at: 'deleted_at',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  parent_ticket_id: 'parent_ticket_id',
  global_organisation_id: 'global_organisation_id',
  deadline_date: 'deadline_date',
  master_tag_prefix: 'master_tag_prefix',
  tag_number: 'tag_number',
  tag_holder: 'tag_holder',
  tag_status_id: 'tag_status_id',
  group_id: 'group_id'
};

exports.Prisma.Leads_tags_assign_toScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_tags_id: 'leads_tags_id',
  users_id: 'users_id',
  user_comments: 'user_comments',
  assign_date: 'assign_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  tag_status_id: 'tag_status_id'
};

exports.Prisma.Leads_ticketsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  parent_ticket_id: 'parent_ticket_id',
  sequence_no: 'sequence_no',
  is_deleted: 'is_deleted',
  deleted_date: 'deleted_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  is_delete: 'is_delete',
  global_organisation_id: 'global_organisation_id',
  ticket_crm_id: 'ticket_crm_id',
  master_ticket_crm_id: 'master_ticket_crm_id',
  organisation_name: 'organisation_name',
  deadline_date: 'deadline_date',
  ticket_description: 'ticket_description',
  ticket_subject: 'ticket_subject',
  master_ticket_prefix: 'master_ticket_prefix',
  ticket_number: 'ticket_number',
  deadline_time: 'deadline_time',
  assigned_to: 'assigned_to',
  is_archived: 'is_archived',
  user_comments: 'user_comments',
  ticket_status_id: 'ticket_status_id',
  assign_date: 'assign_date',
  opened_date: 'opened_date',
  ticket_owner_id: 'ticket_owner_id',
  import_status: 'import_status',
  category: 'category',
  parent_ticket_id_number: 'parent_ticket_id_number',
  reset_count: 'reset_count',
  priority: 'priority',
  ticket_type: 'ticket_type',
  ticket_status_id_backup: 'ticket_status_id_backup',
  priority_backup: 'priority_backup',
  hours_required: 'hours_required',
  is_deadline_reset: 'is_deadline_reset',
  is_hours_required_reset: 'is_hours_required_reset'
};

exports.Prisma.Leads_tickets_assign_toScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_tickets_id: 'leads_tickets_id',
  users_id: 'users_id',
  user_comments: 'user_comments',
  ticket_status_id: 'ticket_status_id',
  assign_date: 'assign_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at',
  import_status: 'import_status'
};

exports.Prisma.Leads_tickets_statusScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  status_name: 'status_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  sequence_no: 'sequence_no'
};

exports.Prisma.Leads_transactionsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  product_name: 'product_name',
  lead_source_details: 'lead_source_details',
  lead_currency_id: 'lead_currency_id',
  lead_owner_id: 'lead_owner_id',
  lead_holder_id: 'lead_holder_id',
  deadline_date: 'deadline_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  lead_status_id: 'lead_status_id',
  last_modified_on: 'last_modified_on',
  investment_hours: 'investment_hours',
  deleted_date: 'deleted_date',
  lead_record_type: 'lead_record_type',
  classification_id: 'classification_id',
  lead_source: 'lead_source',
  full_name: 'full_name',
  organisation_name: 'organisation_name',
  is_delete: 'is_delete',
  deleted_at: 'deleted_at',
  referral_organisation: 'referral_organisation',
  company_name: 'company_name',
  finance_value: 'finance_value',
  turn_over: 'turn_over',
  crm_id: 'crm_id',
  import_people_email: 'import_people_email',
  is_ticket_n: 'is_ticket_n',
  opportunity_name: 'opportunity_name',
  a_id: 'a_id',
  is_ticket: 'is_ticket',
  people_name: 'people_name',
  unused_date: 'unused_date',
  lead_status_id_backup: 'lead_status_id_backup',
  failed_reason: 'failed_reason',
  total_inbound: 'total_inbound',
  total_outbound: 'total_outbound',
  total_comment: 'total_comment',
  total_conversation: 'total_conversation',
  last_communications: 'last_communications',
  last_sold_chat_on: 'last_sold_chat_on',
  last_conversation_on: 'last_conversation_on',
  lead_record_type_backup: 'lead_record_type_backup',
  rate: 'rate',
  ptv: 'ptv',
  dso: 'dso',
  pv_to: 'pv_to',
  summary: 'summary',
  rejected_reason: 'rejected_reason',
  future_reason: 'future_reason',
  failed_summary: 'failed_summary',
  holder_modified: 'holder_modified',
  is_downgraded: 'is_downgraded',
  gclid: 'gclid',
  is_quality_lead: 'is_quality_lead',
  interesting_leads: 'interesting_leads'
};

exports.Prisma.Leads_transactions_contactsScalarFieldEnum = {
  id: 'id',
  leads_transactions_id: 'leads_transactions_id',
  contact_type: 'contact_type',
  contact_for: 'contact_for',
  contact_value: 'contact_value',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ledger_dashboard_widgetsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  widget_title: 'widget_title',
  widget_description: 'widget_description',
  widget_function_name: 'widget_function_name',
  extra_options: 'extra_options',
  allowed_user_roles: 'allowed_user_roles',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ledger_email_templatesScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  template_name: 'template_name',
  email_subject: 'email_subject',
  email_body: 'email_body',
  used_placeholders: 'used_placeholders',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ledger_system_auditScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  user_type: 'user_type',
  user_id: 'user_id',
  event: 'event',
  auditable_type: 'auditable_type',
  auditable_id: 'auditable_id',
  old_values: 'old_values',
  new_values: 'new_values',
  url: 'url',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  tags: 'tags',
  created_at: 'created_at',
  updated_at: 'updated_at',
  flag: 'flag'
};

exports.Prisma.LedgersScalarFieldEnum = {
  id: 'id',
  parent_ledger: 'parent_ledger',
  organisation_id: 'organisation_id',
  super_user_id: 'super_user_id',
  name: 'name',
  logo_url: 'logo_url',
  description: 'description',
  currency_id: 'currency_id',
  timezone_id: 'timezone_id',
  status: 'status',
  deleted_at: 'deleted_at',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  hierarchy_code: 'hierarchy_code',
  api_access: 'api_access'
};

exports.Prisma.Ledgers_exchange_rate_settingsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  currency_id: 'currency_id',
  current_base_value: 'current_base_value',
  fx_rate_provider_id: 'fx_rate_provider_id',
  created_by: 'created_by',
  created_at: 'created_at',
  status: 'status'
};

exports.Prisma.Ledgers_financial_yearScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  start_date: 'start_date',
  end_date: 'end_date',
  data_status: 'data_status',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ledgers_role_mappingScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  role_id: 'role_id',
  related_entity_type: 'related_entity_type',
  related_entity_id: 'related_entity_id',
  related_role_id: 'related_role_id',
  exchange_ref_id: 'exchange_ref_id',
  tag_ids: 'tag_ids',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  crm_id: 'crm_id',
  supplier_insurance_no: 'supplier_insurance_no',
  currency_id: 'currency_id',
  agreed_early_payment_discount: 'agreed_early_payment_discount',
  updated_by: 'updated_by',
  is_delete: 'is_delete',
  deleted_at: 'deleted_at'
};

exports.Prisma.Ledgers_tagsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  tag_name: 'tag_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Lock_notesScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  leads_transactions_id: 'leads_transactions_id',
  leads_notes_id: 'leads_notes_id',
  users_id: 'users_id',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MigrationsScalarFieldEnum = {
  id: 'id',
  migration: 'migration',
  batch: 'batch'
};

exports.Prisma.Org_exchange_ratingsScalarFieldEnum = {
  id: 'id',
  global_org_id: 'global_org_id',
  global_exchange_rating_id: 'global_exchange_rating_id',
  mapping_type: 'mapping_type',
  ratting_json: 'ratting_json',
  from_date: 'from_date',
  to_date: 'to_date',
  order: 'order',
  additional_description: 'additional_description',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  ledgers_role_mapping_id: 'ledgers_role_mapping_id'
};

exports.Prisma.Organisation_crm_idsScalarFieldEnum = {
  id: 'id',
  organisation_id: 'organisation_id',
  crm_id: 'crm_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Organisation_statusesScalarFieldEnum = {
  id: 'id',
  status_name: 'status_name',
  status_code: 'status_code',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  ledger_id: 'ledger_id',
  sequence_no: 'sequence_no'
};

exports.Prisma.Organisations_rolesScalarFieldEnum = {
  id: 'id',
  role_name: 'role_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  related_role_ids: 'related_role_ids',
  ledger_id: 'ledger_id'
};

exports.Prisma.People_crm_idsScalarFieldEnum = {
  id: 'id',
  people_id: 'people_id',
  crm_id: 'crm_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_delete: 'is_delete',
  deleted_at: 'deleted_at'
};

exports.Prisma.People_rolesScalarFieldEnum = {
  id: 'id',
  role_name: 'role_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  related_role_ids: 'related_role_ids',
  ledger_id: 'ledger_id'
};

exports.Prisma.People_statusScalarFieldEnum = {
  id: 'id',
  status_name: 'status_name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  sequence_no: 'sequence_no'
};

exports.Prisma.RemindersScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  receiver_id: 'receiver_id',
  event_record_type: 'event_record_type',
  reminder_type: 'reminder_type',
  reminder_for: 'reminder_for',
  subject: 'subject',
  due_date_time: 'due_date_time',
  start: 'start',
  end: 'end',
  status: 'status',
  closed: 'closed',
  company_organisation: 'company_organisation',
  organisation_id: 'organisation_id',
  lead: 'lead',
  opportunity: 'opportunity',
  description: 'description',
  full_description: 'full_description',
  name: 'name',
  phone: 'phone',
  mobile: 'mobile',
  email: 'email',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_by_alias: 'created_by_alias',
  updated_by_alias: 'updated_by_alias',
  reminder_date_time_backup: 'reminder_date_time_backup',
  priority: 'priority',
  is_sent: 'is_sent',
  is_read: 'is_read',
  read_date: 'read_date',
  created_at: 'created_at',
  updated_at: 'updated_at',
  reset_count: 'reset_count',
  reminder_settings: 'reminder_settings',
  reminder_flag: 'reminder_flag',
  deleted_at: 'deleted_at',
  hourglass_date_time: 'hourglass_date_time'
};

exports.Prisma.Report_dataScalarFieldEnum = {
  id: 'id',
  report_file_id: 'report_file_id',
  posted: 'posted',
  transaction_details: 'transaction_details',
  transaction_type: 'transaction_type',
  payment_amount: 'payment_amount',
  receipt_amount: 'receipt_amount',
  ledger_balance: 'ledger_balance',
  cleared_status: 'cleared_status',
  cheque_number: 'cheque_number',
  value_date: 'value_date',
  customer_reference: 'customer_reference',
  bank_reference: 'bank_reference',
  hash: 'hash',
  is_duplicate: 'is_duplicate'
};

exports.Prisma.Report_filesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  bank_account_id: 'bank_account_id',
  name: 'name',
  path: 'path',
  hash: 'hash',
  state: 'state',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  total_rows: 'total_rows'
};

exports.Prisma.Score_libraryScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  product: 'product',
  classification_id: 'classification_id',
  title: 'title',
  description: 'description',
  score_json: 'score_json',
  score_form: 'score_form',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Snap_noteScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  snap_note_texts: 'snap_note_texts',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Snap_note_toScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  users_id: 'users_id',
  snap_note_id: 'snap_note_id',
  snap_note_date: 'snap_note_date',
  is_sent: 'is_sent',
  sent_date: 'sent_date',
  is_read: 'is_read',
  read_date: 'read_date',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Sold_sourceScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  sold_source_name: 'sold_source_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Sold_status_sequenceScalarFieldEnum = {
  id: 'id',
  lead_record_type_id: 'lead_record_type_id',
  lead_record_type: 'lead_record_type',
  lead_status_id: 'lead_status_id',
  sequence: 'sequence',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.System_menu_actionsScalarFieldEnum = {
  id: 'id',
  action_name: 'action_name',
  created_at: 'created_at',
  updated_at: 'updated_at',
  method_name: 'method_name',
  system_menu_id: 'system_menu_id'
};

exports.Prisma.System_modulesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  path: 'path',
  parent_id: 'parent_id',
  sequence_no: 'sequence_no',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  menu_type: 'menu_type'
};

exports.Prisma.Ticker_informationScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  ticker_text: 'ticker_text',
  ticker_url: 'ticker_url',
  description: 'description',
  updated_by: 'updated_by',
  updated_at: 'updated_at',
  user_groups: 'user_groups'
};

exports.Prisma.Ticker_tape_broadcastScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  type: 'type',
  deleted_at: 'deleted_at',
  created_by: 'created_by',
  updated_by: 'updated_by',
  deleted_by: 'deleted_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ticket_priorityScalarFieldEnum = {
  id: 'id',
  priority: 'priority',
  order: 'order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_crm_idsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  crm_id: 'crm_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_dashboardsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  widget_id: 'widget_id',
  position: 'position',
  name: 'name',
  settings: 'settings',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.User_groupsScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  group_name: 'group_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  manager_id: 'manager_id'
};

exports.Prisma.User_groups_permissionsScalarFieldEnum = {
  id: 'id',
  user_groups_id: 'user_groups_id',
  dma_menu_id: 'dma_menu_id',
  dma_menu_actions_id: 'dma_menu_actions_id',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  first_name: 'first_name',
  email: 'email',
  password: 'password',
  remember_token: 'remember_token',
  status: 'status',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_email: 'is_email',
  tempkey: 'tempkey',
  last_name: 'last_name',
  default_ledger_id: 'default_ledger_id',
  deleted_at: 'deleted_at',
  last_login_at: 'last_login_at',
  dm_settings: 'dm_settings',
  bonus_figures: 'bonus_figures',
  days_target: 'days_target',
  theme_color: 'theme_color',
  font_size: 'font_size',
  sales_target_date: 'sales_target_date',
  sales_target: 'sales_target',
  phone_number: 'phone_number',
  mobile_number: 'mobile_number',
  sms_number: 'sms_number',
  profile_img: 'profile_img',
  quick_notes: 'quick_notes',
  crm_id: 'crm_id',
  is_change_password: 'is_change_password',
  auto_text_correction: 'auto_text_correction',
  created_by: 'created_by',
  updated_by: 'updated_by',
  global_organisation_id: 'global_organisation_id',
  profile_url: 'profile_url',
  notification_settings: 'notification_settings'
};

exports.Prisma.Users_apis_accessScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  user_id: 'user_id',
  ip_address: 'ip_address',
  expiry_date: 'expiry_date',
  api_key: 'api_key',
  secret: 'secret',
  data_limit: 'data_limit',
  status: 'status',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Users_groups_mappingScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  user_id: 'user_id',
  user_group_id: 'user_group_id',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Users_rolesScalarFieldEnum = {
  id: 'id',
  role_name: 'role_name',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  dma_access: 'dma_access'
};

exports.Prisma.Users_roles_mappingScalarFieldEnum = {
  id: 'id',
  ledger_id: 'ledger_id',
  user_id: 'user_id',
  user_role_id: 'user_role_id',
  is_custom: 'is_custom',
  created_by: 'created_by',
  updated_by: 'updated_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Users_roles_permissionsScalarFieldEnum = {
  id: 'id',
  user_role_id: 'user_role_id',
  system_menu_id: 'system_menu_id',
  system_menu_actions_id: 'system_menu_actions_id',
  user_role_mapping_id: 'user_role_mapping_id',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.addressesOrderByRelevanceFieldEnum = {
  address_1: 'address_1',
  address_2: 'address_2',
  address_3: 'address_3',
  city: 'city',
  state_county: 'state_county',
  postal_code: 'postal_code'
};

exports.Prisma.deal_fieldsOrderByRelevanceFieldEnum = {
  deals_field_name: 'deals_field_name',
  deals_field_type: 'deals_field_type',
  deals_field_description: 'deals_field_description',
  deals_field_rpa_group: 'deals_field_rpa_group'
};

exports.Prisma.deal_fields_valuesOrderByRelevanceFieldEnum = {
  deal_field_value: 'deal_field_value',
  pdf_path: 'pdf_path',
  is_issued: 'is_issued',
  is_algorithm: 'is_algorithm'
};

exports.Prisma.deal_sumOrderByRelevanceFieldEnum = {
  note: 'note',
  grade: 'grade',
  class: 'class',
  file_attachment: 'file_attachment',
  specific_condition_text: 'specific_condition_text',
  pricing_method_text: 'pricing_method_text'
};

exports.Prisma.dm_browser_tokenOrderByRelevanceFieldEnum = {
  token: 'token'
};

exports.Prisma.dm_filtersOrderByRelevanceFieldEnum = {
  page: 'page',
  filter: 'filter',
  value: 'value',
  column_state: 'column_state'
};

exports.Prisma.dm_push_notificationOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content',
  type: 'type',
  link: 'link',
  multicast_id: 'multicast_id'
};

exports.Prisma.dm_tte_algorithmsOrderByRelevanceFieldEnum = {
  algorithm_name: 'algorithm_name',
  algo_func_name: 'algo_func_name',
  readable_format: 'readable_format',
  algorithm_function: 'algorithm_function',
  algorithm_json: 'algorithm_json',
  used_tte_fields: 'used_tte_fields',
  used_algorithms: 'used_algorithms',
  algorithm_desc: 'algorithm_desc',
  last_parse_result: 'last_parse_result'
};

exports.Prisma.dm_tte_fieldsOrderByRelevanceFieldEnum = {
  field_name: 'field_name',
  field_type: 'field_type',
  default_value: 'default_value',
  description: 'description',
  rpa_group: 'rpa_group',
  rpa_values: 'rpa_values'
};

exports.Prisma.dma_menuOrderByRelevanceFieldEnum = {
  title: 'title',
  path: 'path'
};

exports.Prisma.dma_menu_actionsOrderByRelevanceFieldEnum = {
  action_name: 'action_name',
  display_name: 'display_name'
};

exports.Prisma.dma_reportsOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  description: 'description',
  generated_on_options: 'generated_on_options',
  generated_on_query: 'generated_on_query',
  generated_on_dynamic_values: 'generated_on_dynamic_values',
  column_settings: 'column_settings',
  report_on: 'report_on',
  report_by: 'report_by',
  report_for: 'report_for',
  grid_columns: 'grid_columns'
};

exports.Prisma.email_historyOrderByRelevanceFieldEnum = {
  mail_content: 'mail_content'
};

exports.Prisma.failed_jobsOrderByRelevanceFieldEnum = {
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception'
};

exports.Prisma.global_countriesOrderByRelevanceFieldEnum = {
  country_name: 'country_name',
  iso_code_alpha2: 'iso_code_alpha2',
  iso_code_alpha3: 'iso_code_alpha3',
  time_zone: 'time_zone'
};

exports.Prisma.global_currenciesOrderByRelevanceFieldEnum = {
  currency_name: 'currency_name',
  currency_code: 'currency_code',
  currency_symbol: 'currency_symbol'
};

exports.Prisma.global_entity_contactsOrderByRelevanceFieldEnum = {
  contact_type: 'contact_type',
  contact_for: 'contact_for',
  contact_value: 'contact_value'
};

exports.Prisma.global_industriesOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.global_nace_sectionsOrderByRelevanceFieldEnum = {
  code: 'code',
  section: 'section'
};

exports.Prisma.global_nace_sections_categoryOrderByRelevanceFieldEnum = {
  category_name: 'category_name'
};

exports.Prisma.global_organisationsOrderByRelevanceFieldEnum = {
  organisation_name: 'organisation_name',
  trade_name: 'trade_name',
  fy_start_month: 'fy_start_month',
  fy_end_month: 'fy_end_month',
  website: 'website',
  registration_number: 'registration_number',
  vat_number: 'vat_number',
  crm_id: 'crm_id',
  logo_url: 'logo_url',
  description: 'description',
  revenue_access_number: 'revenue_access_number',
  exchange_ref_id: 'exchange_ref_id',
  hierarchy_code: 'hierarchy_code',
  proof_of_identity: 'proof_of_identity',
  proof_of_address: 'proof_of_address',
  merge_with: 'merge_with'
};

exports.Prisma.global_peopleOrderByRelevanceFieldEnum = {
  salutation: 'salutation',
  first_name: 'first_name',
  last_name: 'last_name',
  title: 'title',
  date_of_birth: 'date_of_birth',
  pps_number: 'pps_number',
  former_last_name: 'former_last_name',
  notes: 'notes',
  photo_url: 'photo_url',
  pronounced: 'pronounced',
  crm_id: 'crm_id',
  exchange_ref_id: 'exchange_ref_id',
  import_people_name: 'import_people_name'
};

exports.Prisma.global_timezonesOrderByRelevanceFieldEnum = {
  timezone: 'timezone'
};

exports.Prisma.investment_hoursOrderByRelevanceFieldEnum = {
  investment_hours: 'investment_hours',
  page_name: 'page_name'
};

exports.Prisma.key_libraryOrderByRelevanceFieldEnum = {
  key_subject: 'key_subject',
  key_note: 'key_note'
};

exports.Prisma.knowledge_libraryOrderByRelevanceFieldEnum = {
  knowledge_subject: 'knowledge_subject',
  notes_description: 'notes_description',
  knowledge_group: 'knowledge_group',
  knowledge_classification: 'knowledge_classification'
};

exports.Prisma.lead_record_typeOrderByRelevanceFieldEnum = {
  record_type_name: 'record_type_name',
  sequence: 'sequence'
};

exports.Prisma.leads_connectionsOrderByRelevanceFieldEnum = {
  connection_role_name: 'connection_role_name'
};

exports.Prisma.leads_entity_attributesOrderByRelevanceFieldEnum = {
  leads_entity_attributes_name: 'leads_entity_attributes_name'
};

exports.Prisma.leads_entity_attributes_valueOrderByRelevanceFieldEnum = {
  leads_entity_attributes_value: 'leads_entity_attributes_value'
};

exports.Prisma.leads_folders_filesOrderByRelevanceFieldEnum = {
  attachment_type: 'attachment_type',
  entity_name: 'entity_name',
  full_path: 'full_path',
  extra_1: 'extra_1',
  is_issued: 'is_issued',
  pdf_path: 'pdf_path',
  full_path_back_up: 'full_path_back_up',
  created_by_id: 'created_by_id',
  a_id: 'a_id',
  feed_item_id: 'feed_item_id',
  related_record_id: 'related_record_id',
  file_ext: 'file_ext'
};

exports.Prisma.leads_notesOrderByRelevanceFieldEnum = {
  notes_description: 'notes_description',
  current_bg_color: 'current_bg_color',
  previous_bg_color: 'previous_bg_color',
  file_attachment: 'file_attachment',
  opportunity_name: 'opportunity_name',
  link_url: 'link_url',
  a_id: 'a_id',
  feed_item_id: 'feed_item_id',
  parent_id: 'parent_id',
  content_id: 'content_id',
  related_record_id: 'related_record_id',
  inserted_by_id: 'inserted_by_id',
  origin_network_id: 'origin_network_id',
  attachment: 'attachment',
  draft_note: 'draft_note'
};

exports.Prisma.leads_scheduleOrderByRelevanceFieldEnum = {
  schedule_title: 'schedule_title',
  schedule_description: 'schedule_description',
  file_attachment: 'file_attachment'
};

exports.Prisma.leads_screensOrderByRelevanceFieldEnum = {
  screen_title: 'screen_title',
  screen_description: 'screen_description',
  file_attachment: 'file_attachment'
};

exports.Prisma.leads_sssOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  description_text: 'description_text',
  description_backup: 'description_backup',
  draft_description: 'draft_description',
  shortfall_type: 'shortfall_type'
};

exports.Prisma.leads_statusOrderByRelevanceFieldEnum = {
  status_name: 'status_name',
  record_type: 'record_type'
};

exports.Prisma.leads_status_tempOrderByRelevanceFieldEnum = {
  status_name: 'status_name'
};

exports.Prisma.leads_tagsOrderByRelevanceFieldEnum = {
  tag_subject: 'tag_subject',
  tag_content: 'tag_content',
  master_tag_prefix: 'master_tag_prefix',
  tag_number: 'tag_number'
};

exports.Prisma.leads_tags_assign_toOrderByRelevanceFieldEnum = {
  user_comments: 'user_comments'
};

exports.Prisma.leads_ticketsOrderByRelevanceFieldEnum = {
  ticket_crm_id: 'ticket_crm_id',
  master_ticket_crm_id: 'master_ticket_crm_id',
  organisation_name: 'organisation_name',
  ticket_description: 'ticket_description',
  ticket_subject: 'ticket_subject',
  master_ticket_prefix: 'master_ticket_prefix',
  ticket_number: 'ticket_number',
  user_comments: 'user_comments',
  ticket_owner_id: 'ticket_owner_id',
  import_status: 'import_status',
  category: 'category',
  parent_ticket_id_number: 'parent_ticket_id_number'
};

exports.Prisma.leads_tickets_assign_toOrderByRelevanceFieldEnum = {
  user_comments: 'user_comments',
  import_status: 'import_status'
};

exports.Prisma.leads_tickets_statusOrderByRelevanceFieldEnum = {
  status_name: 'status_name'
};

exports.Prisma.leads_transactionsOrderByRelevanceFieldEnum = {
  product_name: 'product_name',
  lead_source_details: 'lead_source_details',
  investment_hours: 'investment_hours',
  deleted_date: 'deleted_date',
  lead_record_type: 'lead_record_type',
  lead_source: 'lead_source',
  referral_organisation: 'referral_organisation',
  company_name: 'company_name',
  crm_id: 'crm_id',
  import_people_email: 'import_people_email',
  opportunity_name: 'opportunity_name',
  a_id: 'a_id',
  people_name: 'people_name',
  unused_date: 'unused_date',
  failed_reason: 'failed_reason',
  last_communications: 'last_communications',
  last_sold_chat_on: 'last_sold_chat_on',
  last_conversation_on: 'last_conversation_on',
  lead_record_type_backup: 'lead_record_type_backup',
  summary: 'summary',
  rejected_reason: 'rejected_reason',
  future_reason: 'future_reason',
  failed_summary: 'failed_summary',
  gclid: 'gclid'
};

exports.Prisma.leads_transactions_contactsOrderByRelevanceFieldEnum = {
  contact_type: 'contact_type',
  contact_for: 'contact_for',
  contact_value: 'contact_value'
};

exports.Prisma.ledger_dashboard_widgetsOrderByRelevanceFieldEnum = {
  widget_title: 'widget_title',
  widget_description: 'widget_description',
  widget_function_name: 'widget_function_name',
  extra_options: 'extra_options',
  allowed_user_roles: 'allowed_user_roles'
};

exports.Prisma.ledger_email_templatesOrderByRelevanceFieldEnum = {
  template_name: 'template_name',
  email_subject: 'email_subject',
  email_body: 'email_body',
  used_placeholders: 'used_placeholders'
};

exports.Prisma.ledger_system_auditOrderByRelevanceFieldEnum = {
  user_type: 'user_type',
  event: 'event',
  auditable_type: 'auditable_type',
  old_values: 'old_values',
  new_values: 'new_values',
  url: 'url',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  tags: 'tags',
  flag: 'flag'
};

exports.Prisma.ledgersOrderByRelevanceFieldEnum = {
  name: 'name',
  logo_url: 'logo_url',
  description: 'description',
  hierarchy_code: 'hierarchy_code'
};

exports.Prisma.ledgers_role_mappingOrderByRelevanceFieldEnum = {
  exchange_ref_id: 'exchange_ref_id',
  tag_ids: 'tag_ids',
  crm_id: 'crm_id',
  supplier_insurance_no: 'supplier_insurance_no',
  agreed_early_payment_discount: 'agreed_early_payment_discount'
};

exports.Prisma.ledgers_tagsOrderByRelevanceFieldEnum = {
  tag_name: 'tag_name'
};

exports.Prisma.migrationsOrderByRelevanceFieldEnum = {
  migration: 'migration'
};

exports.Prisma.org_exchange_ratingsOrderByRelevanceFieldEnum = {
  ratting_json: 'ratting_json',
  additional_description: 'additional_description'
};

exports.Prisma.organisation_crm_idsOrderByRelevanceFieldEnum = {
  crm_id: 'crm_id'
};

exports.Prisma.organisation_statusesOrderByRelevanceFieldEnum = {
  status_name: 'status_name',
  status_code: 'status_code'
};

exports.Prisma.organisations_rolesOrderByRelevanceFieldEnum = {
  role_name: 'role_name',
  related_role_ids: 'related_role_ids'
};

exports.Prisma.people_crm_idsOrderByRelevanceFieldEnum = {
  crm_id: 'crm_id'
};

exports.Prisma.people_rolesOrderByRelevanceFieldEnum = {
  role_name: 'role_name',
  related_role_ids: 'related_role_ids'
};

exports.Prisma.people_statusOrderByRelevanceFieldEnum = {
  status_name: 'status_name'
};

exports.Prisma.remindersOrderByRelevanceFieldEnum = {
  event_record_type: 'event_record_type',
  reminder_type: 'reminder_type',
  subject: 'subject',
  status: 'status',
  company_organisation: 'company_organisation',
  organisation_id: 'organisation_id',
  lead: 'lead',
  opportunity: 'opportunity',
  description: 'description',
  full_description: 'full_description',
  name: 'name',
  phone: 'phone',
  mobile: 'mobile',
  email: 'email',
  created_by_alias: 'created_by_alias',
  updated_by_alias: 'updated_by_alias',
  priority: 'priority',
  reminder_settings: 'reminder_settings'
};

exports.Prisma.report_dataOrderByRelevanceFieldEnum = {
  posted: 'posted',
  transaction_details: 'transaction_details',
  transaction_type: 'transaction_type',
  payment_amount: 'payment_amount',
  receipt_amount: 'receipt_amount',
  ledger_balance: 'ledger_balance',
  cleared_status: 'cleared_status',
  cheque_number: 'cheque_number',
  value_date: 'value_date',
  customer_reference: 'customer_reference',
  bank_reference: 'bank_reference',
  hash: 'hash'
};

exports.Prisma.report_filesOrderByRelevanceFieldEnum = {
  name: 'name',
  path: 'path',
  hash: 'hash'
};

exports.Prisma.score_libraryOrderByRelevanceFieldEnum = {
  product: 'product',
  title: 'title',
  description: 'description',
  score_json: 'score_json',
  score_form: 'score_form'
};

exports.Prisma.snap_noteOrderByRelevanceFieldEnum = {
  snap_note_texts: 'snap_note_texts'
};

exports.Prisma.sold_sourceOrderByRelevanceFieldEnum = {
  sold_source_name: 'sold_source_name'
};

exports.Prisma.sold_status_sequenceOrderByRelevanceFieldEnum = {
  lead_record_type: 'lead_record_type'
};

exports.Prisma.system_menu_actionsOrderByRelevanceFieldEnum = {
  action_name: 'action_name',
  method_name: 'method_name'
};

exports.Prisma.system_modulesOrderByRelevanceFieldEnum = {
  title: 'title',
  path: 'path'
};

exports.Prisma.ticker_informationOrderByRelevanceFieldEnum = {
  ticker_text: 'ticker_text',
  ticker_url: 'ticker_url',
  description: 'description',
  user_groups: 'user_groups'
};

exports.Prisma.ticker_tape_broadcastOrderByRelevanceFieldEnum = {
  key: 'key',
  value: 'value',
  type: 'type'
};

exports.Prisma.ticket_priorityOrderByRelevanceFieldEnum = {
  priority: 'priority'
};

exports.Prisma.user_crm_idsOrderByRelevanceFieldEnum = {
  crm_id: 'crm_id'
};

exports.Prisma.user_dashboardsOrderByRelevanceFieldEnum = {
  name: 'name',
  settings: 'settings'
};

exports.Prisma.user_groupsOrderByRelevanceFieldEnum = {
  group_name: 'group_name'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  first_name: 'first_name',
  email: 'email',
  password: 'password',
  remember_token: 'remember_token',
  is_email: 'is_email',
  tempkey: 'tempkey',
  last_name: 'last_name',
  dm_settings: 'dm_settings',
  bonus_figures: 'bonus_figures',
  theme_color: 'theme_color',
  font_size: 'font_size',
  sales_target: 'sales_target',
  phone_number: 'phone_number',
  mobile_number: 'mobile_number',
  sms_number: 'sms_number',
  profile_img: 'profile_img',
  quick_notes: 'quick_notes',
  crm_id: 'crm_id',
  auto_text_correction: 'auto_text_correction',
  profile_url: 'profile_url',
  notification_settings: 'notification_settings'
};

exports.Prisma.users_apis_accessOrderByRelevanceFieldEnum = {
  ip_address: 'ip_address',
  api_key: 'api_key',
  secret: 'secret'
};

exports.Prisma.users_rolesOrderByRelevanceFieldEnum = {
  role_name: 'role_name',
  created_by: 'created_by',
  updated_by: 'updated_by'
};

exports.Prisma.users_roles_mappingOrderByRelevanceFieldEnum = {
  created_by: 'created_by',
  updated_by: 'updated_by'
};

exports.Prisma.users_roles_permissionsOrderByRelevanceFieldEnum = {
  created_by: 'created_by'
};
exports.addresses_address_type = exports.$Enums.addresses_address_type = {
  Primary: 'Primary',
  Home: 'Home',
  Office: 'Office',
  Invoice: 'Invoice',
  Delivery: 'Delivery',
  Other: 'Other',
  Registered: 'Registered',
  Trading: 'Trading',
  Billing: 'Billing',
  Registered_Office: 'Registered_Office',
  Business_Location: 'Business_Location',
  Commercial_Office: 'Commercial_Office',
  Technical_Office: 'Technical_Office',
  Operations_Office: 'Operations_Office',
  Invoice_Office: 'Invoice_Office'
};

exports.global_people_proof_of_identity = exports.$Enums.global_people_proof_of_identity = {
  proof_of_identity_enum_value_1: 'proof_of_identity_enum_value_1',
  proof_of_identity_enum_value_2: 'proof_of_identity_enum_value_2'
};

exports.global_people_proof_of_address = exports.$Enums.global_people_proof_of_address = {
  proof_of_address_enum_value_1: 'proof_of_address_enum_value_1',
  proof_of_address_enum_value_2: 'proof_of_address_enum_value_2'
};

exports.Prisma.ModelName = {
  addresses: 'addresses',
  deal_fields: 'deal_fields',
  deal_fields_values: 'deal_fields_values',
  deal_sum: 'deal_sum',
  dm_browser_token: 'dm_browser_token',
  dm_filters: 'dm_filters',
  dm_push_notification: 'dm_push_notification',
  dm_tte_algorithms: 'dm_tte_algorithms',
  dm_tte_fields: 'dm_tte_fields',
  dma_menu: 'dma_menu',
  dma_menu_actions: 'dma_menu_actions',
  dma_reports: 'dma_reports',
  email_history: 'email_history',
  failed_jobs: 'failed_jobs',
  favourite_report: 'favourite_report',
  global_countries: 'global_countries',
  global_currencies: 'global_currencies',
  global_entity_contacts: 'global_entity_contacts',
  global_industries: 'global_industries',
  global_nace_sections: 'global_nace_sections',
  global_nace_sections_category: 'global_nace_sections_category',
  global_organisations: 'global_organisations',
  global_people: 'global_people',
  global_timezones: 'global_timezones',
  investment_hours: 'investment_hours',
  key_library: 'key_library',
  knowledge_library: 'knowledge_library',
  lead_record_type: 'lead_record_type',
  leads_connections: 'leads_connections',
  leads_entity_attributes: 'leads_entity_attributes',
  leads_entity_attributes_value: 'leads_entity_attributes_value',
  leads_folders_files: 'leads_folders_files',
  leads_notes: 'leads_notes',
  leads_schedule: 'leads_schedule',
  leads_screens: 'leads_screens',
  leads_sss: 'leads_sss',
  leads_status: 'leads_status',
  leads_status_temp: 'leads_status_temp',
  leads_tags: 'leads_tags',
  leads_tags_assign_to: 'leads_tags_assign_to',
  leads_tickets: 'leads_tickets',
  leads_tickets_assign_to: 'leads_tickets_assign_to',
  leads_tickets_status: 'leads_tickets_status',
  leads_transactions: 'leads_transactions',
  leads_transactions_contacts: 'leads_transactions_contacts',
  ledger_dashboard_widgets: 'ledger_dashboard_widgets',
  ledger_email_templates: 'ledger_email_templates',
  ledger_system_audit: 'ledger_system_audit',
  ledgers: 'ledgers',
  ledgers_exchange_rate_settings: 'ledgers_exchange_rate_settings',
  ledgers_financial_year: 'ledgers_financial_year',
  ledgers_role_mapping: 'ledgers_role_mapping',
  ledgers_tags: 'ledgers_tags',
  lock_notes: 'lock_notes',
  migrations: 'migrations',
  org_exchange_ratings: 'org_exchange_ratings',
  organisation_crm_ids: 'organisation_crm_ids',
  organisation_statuses: 'organisation_statuses',
  organisations_roles: 'organisations_roles',
  people_crm_ids: 'people_crm_ids',
  people_roles: 'people_roles',
  people_status: 'people_status',
  reminders: 'reminders',
  report_data: 'report_data',
  report_files: 'report_files',
  score_library: 'score_library',
  snap_note: 'snap_note',
  snap_note_to: 'snap_note_to',
  sold_source: 'sold_source',
  sold_status_sequence: 'sold_status_sequence',
  system_menu_actions: 'system_menu_actions',
  system_modules: 'system_modules',
  ticker_information: 'ticker_information',
  ticker_tape_broadcast: 'ticker_tape_broadcast',
  ticket_priority: 'ticket_priority',
  user_crm_ids: 'user_crm_ids',
  user_dashboards: 'user_dashboards',
  user_groups: 'user_groups',
  user_groups_permissions: 'user_groups_permissions',
  users: 'users',
  users_apis_access: 'users_apis_access',
  users_groups_mapping: 'users_groups_mapping',
  users_roles: 'users_roles',
  users_roles_mapping: 'users_roles_mapping',
  users_roles_permissions: 'users_roles_permissions'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
